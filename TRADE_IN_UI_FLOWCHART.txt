╔══════════════════════════════════════════════════════════════════════════════╗
║                    TRADE-IN SYSTEM - COMPLETE UI FLOWCHART                   ║
║                         WITH ADMIN PRICING CONFIRMATION                       ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────────────┐
│                         PHASE 1: TRADE-IN INITIATION                         │
└──────────────────────────────────────────────────────────────────────────────┘

  👤 CASHIER
    │
    ├─► Add product to cart (POS Page)
    │      cartItems.push(product)
    │
    ├─► Click "Trade-In" button
    │      handleShowTradeInModal()
    │      setShowTradeInCalculator(true)
    │
    └─► ┌──────────────────────────────────────────┐
        │    📱 TradeInCalculator Modal Opens      │
        │                                          │
        │  ┌────────────────────────────────────┐ │
        │  │ Device Assessment Form:            │ │
        │  │ • Device Name                      │ │
        │  │ • Device Model                     │ │
        │  │ • IMEI Number                      │ │
        │  │ • Base Price                       │ │
        │  │ • Condition (⭐⭐⭐⭐)              │ │
        │  │ • Damage Items [+]                 │ │
        │  │                                    │ │
        │  │ ┌──────────────────────────────┐  │ │
        │  │ │ Final Value: 800,000 TZS     │  │ │
        │  │ └──────────────────────────────┘  │ │
        │  │                                    │ │
        │  │    [Calculate] [Complete]          │ │
        │  └────────────────────────────────────┘ │
        └──────────────────────────────────────────┘
                        │
                        ▼

┌──────────────────────────────────────────────────────────────────────────────┐
│                      PHASE 2: TRANSACTION CREATION                           │
└──────────────────────────────────────────────────────────────────────────────┘

  📊 SYSTEM
    │
    ├─► handleTradeInComplete(data)
    │      setTradeInData(data)
    │      setTradeInDiscount(value)
    │      createTradeInTransaction() ────────────► 💾 Database
    │      setTradeInTransaction(result)              INSERT INTO
    │      setShowTradeInContract(true)               lats_trade_in_transactions
    │                                                  ✅ Transaction Created
    │
    └─► ┌──────────────────────────────────────────┐
        │    📄 TradeInContractModal Opens         │
        │                                          │
        │  ┌────────────────────────────────────┐ │
        │  │ Legal Contract                     │ │
        │  │                                    │ │
        │  │ Terms & Conditions...              │ │
        │  │ Ownership Declaration...           │ │
        │  │                                    │ │
        │  │ ┌──────────────────────────────┐  │ │
        │  │ │   Customer Signature Pad     │  │ │
        │  │ │                              │  │ │
        │  │ │      ✍️ [Sign Here]          │  │ │
        │  │ └──────────────────────────────┘  │ │
        │  │                                    │ │
        │  │         [✓ I Agree] [Sign]         │ │
        │  └────────────────────────────────────┘ │
        └──────────────────────────────────────────┘
                        │
                        ▼

┌──────────────────────────────────────────────────────────────────────────────┐
│                        PHASE 3: PAYMENT PROCESSING                           │
└──────────────────────────────────────────────────────────────────────────────┘

  💳 CUSTOMER
    │
    ├─► Select Payment Method
    │      ┌────────────┬────────────┬────────────┐
    │      │   Cash     │  ZenoPay   │Installment │
    │      │   M-Pesa   │   Bank     │   Plan     │
    │      └────────────┴────────────┴────────────┘
    │
    ├─► Process Payment ──────────────────────────► 💾 Database
    │      saleProcessingService.processSale()       INSERT INTO lats_sales
    │      ✅ Payment Successful                     ✅ Sale Recorded
    │
    └─► ✅ CHECK: if (tradeInTransaction exists)
                        │
                        ├─► Yes (Trade-In Sale)
                        │      │
                        │      ▼
                        │   setShowTradeInPricing(true)
                        │      │
                        │      ▼
                        │   ⭐ MODAL AUTO-OPENS
                        │
                        └─► No (Regular Sale)
                               │
                               └─► End (Complete)

                        ▼

┌══════════════════════════════════════════════════════════════════════════════┐
║              ⭐ PHASE 4: ADMIN PRICING CONFIRMATION (NEW!)                   ║
╚══════════════════════════════════════════════════════════════════════════════╝

  👨‍💼 ADMIN
    │
    └─► ┌────────────────────────────────────────────────────────────┐
        │        💰 TradeInPricingModal Opens AUTOMATICALLY         │
        │                                                            │
        │  ┌──────────────────────────────────────────────────────┐ │
        │  │ 📱 Device Information                                │ │
        │  │ ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ │ │
        │  │ Device: iPhone 12 Pro                                │ │
        │  │ Model: A2341                                         │ │
        │  │ IMEI: 123456789012345                                │ │
        │  │ Condition: GOOD                                      │ │
        │  │ Status: ⚙️ Needs Repair                              │ │
        │  └──────────────────────────────────────────────────────┘ │
        │                                                            │
        │  ┌──────────────────────────────────────────────────────┐ │
        │  │ 💰 Pricing Summary                                   │ │
        │  │ ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ │ │
        │  │ Trade-In Value Paid:    800,000 TZS                  │ │
        │  │ + Additional Costs:      50,000 TZS                  │ │
        │  │ ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ │ │
        │  │ Total Cost:             850,000 TZS                  │ │
        │  │ Expected Profit:        250,000 TZS  (29.4%)         │ │
        │  └──────────────────────────────────────────────────────┘ │
        │                                                            │
        │  ┌──────────────────────────────────────────────────────┐ │
        │  │ 🔧 Additional Costs (Optional)                       │ │
        │  │ ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ │ │
        │  │ ┌────────────────┬──────────┬──────────────┬───┐    │ │
        │  │ │ Repair Cost    │ 50,000   │ Screen fix   │ ❌ │   │ │
        │  │ ├────────────────┼──────────┼──────────────┼───┤    │ │
        │  │ │                │          │              │   │    │ │
        │  │ └────────────────┴──────────┴──────────────┴───┘    │ │
        │  │                    [+ Add Cost]                      │ │
        │  └──────────────────────────────────────────────────────┘ │
        │                                                            │
        │  ┌──────────────────────────────────────────────────────┐ │
        │  │ 💵 Selling Price Configuration * (REQUIRED)          │ │
        │  │ ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ │ │
        │  │                                                      │ │
        │  │ Selling Price:  [1,100,000] TZS                     │ │
        │  │                                                      │ │
        │  │ Markup %:       [   29.4  ] %                       │ │
        │  │                 [30%] [50%] Quick Buttons            │ │
        │  │                                                      │ │
        │  │ ┌────────────────────────────────────────────────┐  │ │
        │  │ │ ✅ Profitable: +250,000 TZS                    │  │ │
        │  │ └────────────────────────────────────────────────┘  │ │
        │  └──────────────────────────────────────────────────────┘ │
        │                                                            │
        │            [Cancel]  [✓ Confirm & Add to Inventory]       │
        └────────────────────────────────────────────────────────────┘
                        │
                        ▼
                   Admin Reviews
                        │
                        ├─► Adds Additional Costs (optional)
                        │      updateAdditionalCost()
                        │      ├─► Repair: 50,000 TZS
                        │      ├─► Cleaning: 20,000 TZS
                        │      └─► Total recalculates in real-time
                        │
                        ├─► Sets Selling Price (required)
                        │      updateSellingPrice()
                        │      └─► Profit/Loss updates in real-time
                        │
                        └─► Click "Confirm & Add to Inventory"
                               │
                               ▼
                        
  ┌─────────────────────────────────────────────────────────────┐
  │             ✓ VALIDATION & PROCESSING                       │
  └─────────────────────────────────────────────────────────────┘
                               │
                               ├─► Validate: selling_price > 0?
                               │      ├─► NO  ❌ toast.error("Set price > 0")
                               │      └─► YES ✅ Continue
                               │
                               ├─► Check: selling_price < total_cost?
                               │      ├─► YES ⚠️  window.confirm("Price below cost!")
                               │      │            ├─► Cancel → Return
                               │      │            └─► OK → Continue
                               │      └─► NO  ✅ Continue
                               │
                               ├─► Save Additional Costs as Expenses
                               │      for each cost:
                               │         supabase.from('expenses').insert({
                               │            category, amount, description, ...
                               │         })
                               │      ✅ Expenses Recorded
                               │
                               └─► Call onConfirm(pricingData)
                                      │
                                      ▼

  ┌─────────────────────────────────────────────────────────────┐
  │        📦 INVENTORY SERVICE - ADD TO INVENTORY              │
  └─────────────────────────────────────────────────────────────┘
                                      │
                                      ├─► handleTradeInPricingConfirm(pricingData)
                                      │      ├─► Validate: tradeInTransaction exists?
                                      │      │      NO  ❌ toast.error() → Return
                                      │      │      YES ✅ Continue
                                      │      │
                                      │      └─► Import: { addTradeInDeviceToInventory,
                                      │                    getOrCreateTradeInCategory }
                                      │
                                      ├─► Get/Create "Trade-In Items" Category
                                      │      getOrCreateTradeInCategory()
                                      │         ├─► Find existing category
                                      │         │      ├─► Found ✅ Return ID
                                      │         │      └─► Not Found → Create
                                      │         └─► Create new category
                                      │                ├─► Success ✅ Return ID
                                      │                └─► Error → Use fallback
                                      │
                                      └─► addTradeInDeviceToInventory({
                                             transaction,
                                             categoryId,
                                             resalePrice: pricingData.selling_price
                                          })
                                             │
                                             ▼

  ┌─────────────────────────────────────────────────────────────┐
  │              💾 DATABASE OPERATIONS (5 STEPS)               │
  └─────────────────────────────────────────────────────────────┘

    STEP 1: Create Product
            │
            ├─► INSERT INTO lats_products
            │      name:          "iPhone 12 Pro - A2341 (Trade-In)"
            │      sku:           "TI-123456789012345"
            │      category_id:   Trade-In Items Category ID
            │      cost_price:    850,000 TZS (trade-in + costs)
            │      selling_price: 1,100,000 TZS ⭐ ADMIN PRICE
            │      stock_quantity: 1
            │      is_active:     true (false if needs_repair)
            │
            └─► ✅ Product Created (ID: abc123)

    STEP 2: Create Variant
            │
            ├─► INSERT INTO lats_product_variants
            │      product_id:    abc123
            │      variant_name:  "IMEI: 123456789012345"
            │      sku:           "TI-123456789012345"
            │      selling_price: 1,100,000 TZS ⭐ ADMIN PRICE
            │      variant_attributes: {
            │         imei: "123456789012345",
            │         condition: "good",
            │         trade_in_transaction: "xyz789",
            │         damage_items: [...]
            │      }
            │
            └─► ✅ Variant Created (ID: def456)

    STEP 3: Create Inventory Item
            │
            ├─► INSERT INTO lats_inventory_items
            │      product_id:  abc123
            │      variant_id:  def456
            │      quantity:    1
            │      status:      "available" (or "needs_repair")
            │      notes:       "Trade-in device ready for sale"
            │
            └─► ✅ Inventory Item Created (ID: ghi789)

    STEP 4: Update Trade-In Transaction
            │
            ├─► UPDATE lats_trade_in_transactions
            │      SET inventory_item_id = ghi789,
            │          resale_price = 1,100,000 TZS,
            │          ready_for_resale = true
            │      WHERE id = xyz789
            │
            └─► ✅ Transaction Updated (Linked to Inventory)

    STEP 5: Create Stock Movement
            │
            ├─► INSERT INTO lats_stock_movements
            │      product_id:      abc123
            │      movement_type:   "trade_in"
            │      quantity:        1
            │      reference_type:  "trade_in_transaction"
            │      reference_id:    xyz789
            │
            └─► ✅ Stock Movement Recorded

                                      │
                                      ▼

  ┌─────────────────────────────────────────────────────────────┐
  │                  ✅ SUCCESS & CLEANUP                       │
  └─────────────────────────────────────────────────────────────┘
                                      │
                                      ├─► toast.success("Device added to inventory!")
                                      │
                                      ├─► setShowTradeInPricing(false)
                                      │      └─► Modal Closes
                                      │
                                      ├─► Clear Trade-In State
                                      │      setTradeInTransaction(null)
                                      │      setTradeInData(null)
                                      │      setTradeInDiscount(0)
                                      │
                                      └─► ✅ WORKFLOW COMPLETE

┌══════════════════════════════════════════════════════════════════════════════┐
║                              WORKFLOW SUMMARY                                ║
╚══════════════════════════════════════════════════════════════════════════════╝

  Total Steps: 16
  
  ✅ Steps 1-8:   Original Trade-In Flow (Working)
  ⭐ Steps 9-16:  NEW Admin Pricing Workflow (Implemented)
  
  Key Features:
  • Automatic modal trigger after payment
  • Complete device information display
  • Additional cost tracking with expense recording
  • Real-time profit/loss calculation
  • Selling price validation
  • Admin-confirmed pricing used in inventory
  • Complete database integration
  • Full state cleanup after success

┌══════════════════════════════════════════════════════════════════════════════┐
║                               DATA FLOW                                      ║
╚══════════════════════════════════════════════════════════════════════════════╝

  Calculator → Transaction → Contract → Payment → 
  ⭐ Pricing Modal → Expenses → Inventory → Success

  Data Transformations:
  
  1. Calculator Data:
     { device_name, device_model, condition_rating, damage_items,
       final_trade_in_value }
  
  2. Transaction Data:
     createTradeInTransaction() → { id, ...calculator_data }
  
  3. ⭐ Pricing Data:
     { cost_price, additional_costs[], total_cost,
       selling_price, profit_per_unit }
  
  4. ⭐ Inventory Data:
     { product, variant, inventoryItem } with admin-confirmed pricing

┌══════════════════════════════════════════════════════════════════════════════┐
║                           STATUS: 100% WORKING ✅                            ║
╚══════════════════════════════════════════════════════════════════════════════╝

